apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'gae'
apply plugin: 'war'
apply plugin: 'jetty'

jettyRun.contextPath = '/'
jettyRun.webAppSourceDirectory = file("$rootDir/web-app")

def compatibilityVersion = 1.6
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-gae-plugin:0.7.6'
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.1.1'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    def groovyVersion = '2.0.4'
    def gaeVersion = '1.7.2'
    groovy "org.codehaus.groovy:groovy:$groovyVersion"
    compile "com.google.appengine:appengine-api-1.0-sdk:$gaeVersion",
            "com.google.appengine:appengine-api-labs:$gaeVersion",
            'org.codehaus.groovy:groovy:$groovyVersion'
        
    testCompile "com.google.appengine:appengine-api-stubs:$gaeVersion",
                "com.google.appengine:appengine-testing:$gaeVersion"
                
    gaeSdk "com.google.appengine:appengine-java-sdk:$gaeVersion"
    
    compile "javax.servlet:servlet-api:2.5",
    compile("org.gaelyk:gaelyk:1.2") {
        exclude module: "servlet-api"
//        exclude module: "groovy-all"
    }
            
    compile("org.springframework:spring-webmvc:3.1.2.RELEASE") {
    }

}

webAppDirName = file('web-app')

gae {
    downloadSdk = true
//    optimizeWar = true        // optimizeWar seems to mess up Spring Schemas when it merges jars:
// see http://thread.gmane.org/gmane.comp.java.springframework.user/10148/focus=10205
}
